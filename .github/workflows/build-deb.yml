name: Build, version and release .deb package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version and increment patch
        id: version
        run: |
          
          version=$(cat version.txt)
          echo "Versão atual: $version"

          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "Nova versão: $new_version"

          echo $new_version > version.txt

          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

          git add version.txt
          git commit -m "ci: Nova versão: $new_version"
          git push

      - name: Build .deb package
        run: |
          mkdir -p tigerfetch_pkg/DEBIAN
          mkdir -p tigerfetch_pkg/usr/bin

          cp tigerfetch tigerfetch_pkg/usr/bin/tigerfetch
          chmod 755 tigerfetch_pkg/usr/bin/tigerfetch

          cat <<EOF > tigerfetch_pkg/DEBIAN/control
          Package: tigerfetch
          Version: ${{ env.NEW_VERSION }}
          Section: base
          Priority: optional
          Architecture: all
          Depends: python3, python3-psutil, figlet, pciutils
          Maintainer: Charles Santana <charlesstna@proton.me>
          Description: Tigerfetch - Uma ferramenta simples para exibir informações do sistema estilo Neofetch.
          EOF

          dpkg-deb --build tigerfetch_pkg

          mv tigerfetch_pkg.deb tigerfetch-${{ env.NEW_VERSION }}.deb
          ls -l tigerfetch-${{ env.NEW_VERSION }}.deb

      - name: Create Git Tag
        run: |
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release and upload .deb
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.NEW_VERSION }}
          name: Tigerfetch v${{ env.NEW_VERSION }}
          artifacts: tigerfetch-${{ env.NEW_VERSION }}.deb
          token: ${{ secrets.GITHUB_TOKEN }}
